server:
  port: 8080

spring:
    application:
      name: spring-social-login
    datasource:
        url: jdbc:mysql://${MYSQL_HOST:localhost}:3306/spring-social-login?useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false&allowPublicKeyRetrieval=true
        username: spring-social
        password: ${SPRING_SOCIAL_DB_PASSWORD}
    jpa:
        show-sql: true
        hibernate:
            ddl-auto: update
        properties:
            hibernate:
                dialect: org.hibernate.dialect.MySQL5InnoDBDialect   
    security:
      oauth2:
        client:
          registration:
            google:
              client-id: ${GOOGLE_CLIENT_ID}
              client-secret: ${GOOGLE_CLIENT_SECRET}
            github:    
              client-id: ${GITHUB_CLIENT_ID}
              client-secret: ${GITHUB_CLIENT_SECRET}
            amazon:  
              client-id: ${AMAZON_CLIENT_ID}
              client-secret: ${AMAZON_CLIENT_SECRET}
              authorization-grant-type: authorization_code
              redirect-uri: '{baseUrl}/login/oauth2/code/{registrationId}'
              scope: profile
              client-name: Amazon
          provider:
            amazon:
              authorization-uri: http://www.amazon.com/ap/oa
              token-uri: https://api.amazon.com/auth/o2/token
              user-info-uri: https://api.amazon.com/user/profile
              user-name-attribute: name
logging:
  level:
    root: debug
    org.springframework.web: debug 
